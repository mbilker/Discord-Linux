'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InputModeToHumanReadable = exports.VADAggressivenessToHumanReadable = exports.NoiseSuppressionToHumanReadable = exports.AutomaticGainControlToHumanReadable = exports.EchoCancellationToHumanReadable = exports.NATIVE_TO_REGULAR = exports.NATIVE_MODE_VALUES = exports.VADAggressiveness = exports.NoiseSuppression = exports.AutomaticGainControl = exports.AECMobile = exports.EchoCancellation = undefined;

var _NATIVE_MODE_VALUES, _NATIVE_TO_REGULAR, _EchoCancellationToHu, _AutomaticGainControl, _NoiseSuppressionToHu, _VADAggressivenessToH, _InputModeToHumanRead;

var _Constants = require('../../../Constants');

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var EchoCancellation = exports.EchoCancellation = {
  DISABLED: -1,
  UNCHANGED: 0, // previously set mode
  DEFAULT: 1, // platform default
  CONFERANCE: 2, // coferencing default (aggressive AEC)
  AEC: 3, // Acoustic Echo Cancellation
  AECM: 4 // AEC mobile
};

//noinspection JSUnusedGlobalSymbols
var AECMobile = exports.AECMobile = {
  QUIET_EARPIECE_OR_HEADSET: 0, // Quiet earpiece of headset use
  EARPIECE: 1, // most earpiece use
  LOUD_EARPIECE: 2, // loud earpiece or quiet speakerphone use
  SPEAKERPHONE: 3, // most speakerphone use (default)
  LOUD_SPEAKERPHONE: 4 // Loud speakerphone
};

var AutomaticGainControl = exports.AutomaticGainControl = {
  DISABLED: -1,
  UNCHANGED: 0, // previously set mode
  DEFAULT: 1, // platform default
  ADAPTIVE_ANALOG: 2, // adaptive mode for use when analog volume control exists (e.g. for PC softphone)
  ADAPTIVE_DIGITAL: 3, // scaling takes place in the digital domain (e.g. for conference servers and embedded devices)
  FIXED_DIGITAL: 4 // can be used on embedded devices where the capture signal level is predictable
};

var NoiseSuppression = exports.NoiseSuppression = {
  DISABLED: -1,
  UNCHANGED: 0, // previously set mode
  DEFAULT: 1, // platform default
  CONFERENCE: 2, // conferencing default
  LOW_SUPPRESSION: 3, // lowest suppression
  MODERATE_SUPPRESSION: 4,
  HIGH_SUPPRESSION: 5,
  VERY_HIGH_SUPPRESSION: 6 // highest suppression
};

var VADAggressiveness = exports.VADAggressiveness = {
  DISABLED: -1,
  NORMAL: 0,
  LOW_BIRTATE: 1,
  AGGRESSIVE: 2,
  VERY_AGGRESSIVE: 3
};

var NATIVE_MODE_VALUES = exports.NATIVE_MODE_VALUES = (_NATIVE_MODE_VALUES = {}, _defineProperty(_NATIVE_MODE_VALUES, _Constants.InputModes.VOICE_ACTIVITY, 1), _defineProperty(_NATIVE_MODE_VALUES, _Constants.InputModes.PUSH_TO_TALK, 2), _NATIVE_MODE_VALUES);

var NATIVE_TO_REGULAR = exports.NATIVE_TO_REGULAR = (_NATIVE_TO_REGULAR = {}, _defineProperty(_NATIVE_TO_REGULAR, NATIVE_MODE_VALUES[_Constants.InputModes.VOICE_ACTIVITY], _Constants.InputModes.VOICE_ACTIVITY), _defineProperty(_NATIVE_TO_REGULAR, NATIVE_MODE_VALUES[_Constants.InputModes.PUSH_TO_TALK], _Constants.InputModes.PUSH_TO_TALK), _NATIVE_TO_REGULAR);

var EchoCancellationToHumanReadable = exports.EchoCancellationToHumanReadable = (_EchoCancellationToHu = {}, _defineProperty(_EchoCancellationToHu, EchoCancellation.DISABLED, 'Disabled'), _defineProperty(_EchoCancellationToHu, EchoCancellation.UNCHANGED, 'Unchanged'), _defineProperty(_EchoCancellationToHu, EchoCancellation.DEFAULT, 'Platform Default'), _defineProperty(_EchoCancellationToHu, EchoCancellation.CONFERANCE, 'Conferencing Default (Aggressive AEC)'), _defineProperty(_EchoCancellationToHu, EchoCancellation.AEC, 'Automatic Echo Cancellation'), _defineProperty(_EchoCancellationToHu, EchoCancellation.AECM, 'Automatic Echo Cancellation Mobile'), _EchoCancellationToHu);

var AutomaticGainControlToHumanReadable = exports.AutomaticGainControlToHumanReadable = (_AutomaticGainControl = {}, _defineProperty(_AutomaticGainControl, AutomaticGainControl.DISABLED, 'Disabled'), _defineProperty(_AutomaticGainControl, AutomaticGainControl.UNCHANGED, 'Unchanged'), _defineProperty(_AutomaticGainControl, AutomaticGainControl.DEFAULT, 'Platform Default'), _defineProperty(_AutomaticGainControl, AutomaticGainControl.ADAPTIVE_ANALOG, 'Adaptive Analog'), _defineProperty(_AutomaticGainControl, AutomaticGainControl.ADAPTIVE_DIGITAL, 'Adaptive Digital'), _defineProperty(_AutomaticGainControl, AutomaticGainControl.FIXED_DIGITAL, 'Fixed Digital'), _AutomaticGainControl);

var NoiseSuppressionToHumanReadable = exports.NoiseSuppressionToHumanReadable = (_NoiseSuppressionToHu = {}, _defineProperty(_NoiseSuppressionToHu, NoiseSuppression.DISABLED, 'Disabled'), _defineProperty(_NoiseSuppressionToHu, NoiseSuppression.UNCHANGED, 'Unchanged'), _defineProperty(_NoiseSuppressionToHu, NoiseSuppression.DEFAULT, 'Platform Default'), _defineProperty(_NoiseSuppressionToHu, NoiseSuppression.CONFERENCE, 'Conferencing Default'), _defineProperty(_NoiseSuppressionToHu, NoiseSuppression.LOW_SUPPRESSION, 'Lowest Suppression'), _defineProperty(_NoiseSuppressionToHu, NoiseSuppression.MODERATE_SUPPRESSION, 'Moderate Suppression'), _defineProperty(_NoiseSuppressionToHu, NoiseSuppression.HIGH_SUPPRESSION, 'High Suppression'), _defineProperty(_NoiseSuppressionToHu, NoiseSuppression.VERY_HIGH_SUPPRESSION, 'Very High Suppression'), _NoiseSuppressionToHu);

var VADAggressivenessToHumanReadable = exports.VADAggressivenessToHumanReadable = (_VADAggressivenessToH = {}, _defineProperty(_VADAggressivenessToH, VADAggressiveness.DISABLED, 'Disabled'), _defineProperty(_VADAggressivenessToH, VADAggressiveness.NORMAL, 'Normal'), _defineProperty(_VADAggressivenessToH, VADAggressiveness.LOW_BIRTATE, 'Low Bitrate'), _defineProperty(_VADAggressivenessToH, VADAggressiveness.AGGRESSIVE, 'Aggressive'), _defineProperty(_VADAggressivenessToH, VADAggressiveness.VERY_AGGRESSIVE, 'Very Aggressive'), _VADAggressivenessToH);

var InputModeToHumanReadable = exports.InputModeToHumanReadable = (_InputModeToHumanRead = {}, _defineProperty(_InputModeToHumanRead, NATIVE_MODE_VALUES[_Constants.InputModes.VOICE_ACTIVITY], 'Voice Activity'), _defineProperty(_InputModeToHumanRead, NATIVE_MODE_VALUES[_Constants.InputModes.PUSH_TO_TALK], 'Push To Talk'), _InputModeToHumanRead);

/** WEBPACK FOOTER **
 ** ./discord_app/lib/voice_engine/native/Constants.js
 **/
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3ZvaWNlX2VuZ2luZS1zcmMvbGliL3ZvaWNlX2VuZ2luZS9uYXRpdmUvQ29uc3RhbnRzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFFTyxJQUFNLDhDQUFtQjtBQUM5QixZQUFVLENBQUMsQ0FBRDtBQUNWLGFBQVcsQ0FBWDtBQUNBLFdBQVMsQ0FBVDtBQUNBLGNBQVksQ0FBWjtBQUNBLE9BQUssQ0FBTDtBQUNBLFFBQU0sQ0FBTjtBQU44QixDQUFuQjs7O0FBVU4sSUFBTSxnQ0FBWTtBQUN2Qiw2QkFBMkIsQ0FBM0I7QUFDQSxZQUFVLENBQVY7QUFDQSxpQkFBZSxDQUFmO0FBQ0EsZ0JBQWMsQ0FBZDtBQUNBLHFCQUFtQixDQUFuQjtBQUx1QixDQUFaOztBQVFOLElBQU0sc0RBQXVCO0FBQ2xDLFlBQVUsQ0FBQyxDQUFEO0FBQ1YsYUFBVyxDQUFYO0FBQ0EsV0FBUyxDQUFUO0FBQ0EsbUJBQWlCLENBQWpCO0FBQ0Esb0JBQWtCLENBQWxCO0FBQ0EsaUJBQWUsQ0FBZjtBQU5rQyxDQUF2Qjs7QUFTTixJQUFNLDhDQUFtQjtBQUM5QixZQUFVLENBQUMsQ0FBRDtBQUNWLGFBQVcsQ0FBWDtBQUNBLFdBQVMsQ0FBVDtBQUNBLGNBQVksQ0FBWjtBQUNBLG1CQUFpQixDQUFqQjtBQUNBLHdCQUFzQixDQUF0QjtBQUNBLG9CQUFrQixDQUFsQjtBQUNBLHlCQUF1QixDQUF2QjtBQVI4QixDQUFuQjs7QUFXTixJQUFNLGdEQUFvQjtBQUMvQixZQUFVLENBQUMsQ0FBRDtBQUNWLFVBQVEsQ0FBUjtBQUNBLGVBQWEsQ0FBYjtBQUNBLGNBQVksQ0FBWjtBQUNBLG1CQUFpQixDQUFqQjtDQUxXOztBQVFOLElBQU0sa0hBQ1Ysc0JBQVcsY0FBWCxFQUE0Qix5Q0FDNUIsc0JBQVcsWUFBWCxFQUEwQix3QkFGaEI7O0FBS04sSUFBTSw4R0FDVixtQkFBbUIsc0JBQVcsY0FBWCxHQUE2QixzQkFBVyxjQUFYLHVDQUNoRCxtQkFBbUIsc0JBQVcsWUFBWCxHQUEyQixzQkFBVyxZQUFYLHNCQUZwQzs7QUFLTixJQUFNLGdKQUNWLGlCQUFpQixRQUFqQixzREFDQSxpQkFBaUIsU0FBakIsdURBQ0EsaUJBQWlCLE9BQWpCLDhEQUNBLGlCQUFpQixVQUFqQixtRkFDQSxpQkFBaUIsR0FBakIseUVBQ0EsaUJBQWlCLElBQWpCLCtEQU5VOztBQVNOLElBQU0sd0pBQ1YscUJBQXFCLFFBQXJCLHNEQUNBLHFCQUFxQixTQUFyQix1REFDQSxxQkFBcUIsT0FBckIsOERBQ0EscUJBQXFCLGVBQXJCLDZEQUNBLHFCQUFxQixnQkFBckIsOERBQ0EscUJBQXFCLGFBQXJCLDBDQU5VOztBQVNOLElBQU0sZ0pBQ1YsaUJBQWlCLFFBQWpCLHNEQUNBLGlCQUFpQixTQUFqQix1REFDQSxpQkFBaUIsT0FBakIsOERBQ0EsaUJBQWlCLFVBQWpCLGtFQUNBLGlCQUFpQixlQUFqQixnRUFDQSxpQkFBaUIsb0JBQWpCLGtFQUNBLGlCQUFpQixnQkFBakIsOERBQ0EsaUJBQWlCLHFCQUFqQixrREFSVTs7QUFXTixJQUFNLGtKQUNWLGtCQUFrQixRQUFsQixzREFDQSxrQkFBa0IsTUFBbEIsb0RBQ0Esa0JBQWtCLFdBQWxCLHlEQUNBLGtCQUFrQixVQUFsQix3REFDQSxrQkFBa0IsZUFBbEIsNENBTFU7O0FBUU4sSUFBTSxrSUFDVixtQkFBbUIsc0JBQVcsY0FBWCw2REFDbkIsbUJBQW1CLHNCQUFXLFlBQVgsMENBRlQiLCJmaWxlIjoiQ29uc3RhbnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbnB1dE1vZGVzLCBWb2ljZUNvbm5lY3Rpb25TdGF0ZXMsIFByb2Nlc3NQcmlvcml0eX0gZnJvbSAnLi4vLi4vLi4vQ29uc3RhbnRzJztcblxuZXhwb3J0IGNvbnN0IEVjaG9DYW5jZWxsYXRpb24gPSB7XG4gIERJU0FCTEVEOiAtMSxcbiAgVU5DSEFOR0VEOiAwLCAvLyBwcmV2aW91c2x5IHNldCBtb2RlXG4gIERFRkFVTFQ6IDEsIC8vIHBsYXRmb3JtIGRlZmF1bHRcbiAgQ09ORkVSQU5DRTogMiwgLy8gY29mZXJlbmNpbmcgZGVmYXVsdCAoYWdncmVzc2l2ZSBBRUMpXG4gIEFFQzogMywgLy8gQWNvdXN0aWMgRWNobyBDYW5jZWxsYXRpb25cbiAgQUVDTTogNCAvLyBBRUMgbW9iaWxlXG59O1xuXG4vL25vaW5zcGVjdGlvbiBKU1VudXNlZEdsb2JhbFN5bWJvbHNcbmV4cG9ydCBjb25zdCBBRUNNb2JpbGUgPSB7XG4gIFFVSUVUX0VBUlBJRUNFX09SX0hFQURTRVQ6IDAsIC8vIFF1aWV0IGVhcnBpZWNlIG9mIGhlYWRzZXQgdXNlXG4gIEVBUlBJRUNFOiAxLCAvLyBtb3N0IGVhcnBpZWNlIHVzZVxuICBMT1VEX0VBUlBJRUNFOiAyLCAvLyBsb3VkIGVhcnBpZWNlIG9yIHF1aWV0IHNwZWFrZXJwaG9uZSB1c2VcbiAgU1BFQUtFUlBIT05FOiAzLCAvLyBtb3N0IHNwZWFrZXJwaG9uZSB1c2UgKGRlZmF1bHQpXG4gIExPVURfU1BFQUtFUlBIT05FOiA0IC8vIExvdWQgc3BlYWtlcnBob25lXG59O1xuXG5leHBvcnQgY29uc3QgQXV0b21hdGljR2FpbkNvbnRyb2wgPSB7XG4gIERJU0FCTEVEOiAtMSxcbiAgVU5DSEFOR0VEOiAwLCAvLyBwcmV2aW91c2x5IHNldCBtb2RlXG4gIERFRkFVTFQ6IDEsIC8vIHBsYXRmb3JtIGRlZmF1bHRcbiAgQURBUFRJVkVfQU5BTE9HOiAyLCAvLyBhZGFwdGl2ZSBtb2RlIGZvciB1c2Ugd2hlbiBhbmFsb2cgdm9sdW1lIGNvbnRyb2wgZXhpc3RzIChlLmcuIGZvciBQQyBzb2Z0cGhvbmUpXG4gIEFEQVBUSVZFX0RJR0lUQUw6IDMsIC8vIHNjYWxpbmcgdGFrZXMgcGxhY2UgaW4gdGhlIGRpZ2l0YWwgZG9tYWluIChlLmcuIGZvciBjb25mZXJlbmNlIHNlcnZlcnMgYW5kIGVtYmVkZGVkIGRldmljZXMpXG4gIEZJWEVEX0RJR0lUQUw6IDQgLy8gY2FuIGJlIHVzZWQgb24gZW1iZWRkZWQgZGV2aWNlcyB3aGVyZSB0aGUgY2FwdHVyZSBzaWduYWwgbGV2ZWwgaXMgcHJlZGljdGFibGVcbn07XG5cbmV4cG9ydCBjb25zdCBOb2lzZVN1cHByZXNzaW9uID0ge1xuICBESVNBQkxFRDogLTEsXG4gIFVOQ0hBTkdFRDogMCwgLy8gcHJldmlvdXNseSBzZXQgbW9kZVxuICBERUZBVUxUOiAxLCAvLyBwbGF0Zm9ybSBkZWZhdWx0XG4gIENPTkZFUkVOQ0U6IDIsIC8vIGNvbmZlcmVuY2luZyBkZWZhdWx0XG4gIExPV19TVVBQUkVTU0lPTjogMywgLy8gbG93ZXN0IHN1cHByZXNzaW9uXG4gIE1PREVSQVRFX1NVUFBSRVNTSU9OOiA0LFxuICBISUdIX1NVUFBSRVNTSU9OOiA1LFxuICBWRVJZX0hJR0hfU1VQUFJFU1NJT046IDYgLy8gaGlnaGVzdCBzdXBwcmVzc2lvblxufTtcblxuZXhwb3J0IGNvbnN0IFZBREFnZ3Jlc3NpdmVuZXNzID0ge1xuICBESVNBQkxFRDogLTEsXG4gIE5PUk1BTDogMCxcbiAgTE9XX0JJUlRBVEU6IDEsXG4gIEFHR1JFU1NJVkU6IDIsXG4gIFZFUllfQUdHUkVTU0lWRTogM1xufTtcblxuZXhwb3J0IGNvbnN0IE5BVElWRV9NT0RFX1ZBTFVFUyA9IHtcbiAgW0lucHV0TW9kZXMuVk9JQ0VfQUNUSVZJVFldOiAxLFxuICBbSW5wdXRNb2Rlcy5QVVNIX1RPX1RBTEtdOiAyXG59O1xuXG5leHBvcnQgY29uc3QgTkFUSVZFX1RPX1JFR1VMQVIgPSB7XG4gIFtOQVRJVkVfTU9ERV9WQUxVRVNbSW5wdXRNb2Rlcy5WT0lDRV9BQ1RJVklUWV1dOiBJbnB1dE1vZGVzLlZPSUNFX0FDVElWSVRZLFxuICBbTkFUSVZFX01PREVfVkFMVUVTW0lucHV0TW9kZXMuUFVTSF9UT19UQUxLXV06IElucHV0TW9kZXMuUFVTSF9UT19UQUxLXG59O1xuXG5leHBvcnQgY29uc3QgRWNob0NhbmNlbGxhdGlvblRvSHVtYW5SZWFkYWJsZSA9IHtcbiAgW0VjaG9DYW5jZWxsYXRpb24uRElTQUJMRURdOiBgRGlzYWJsZWRgLFxuICBbRWNob0NhbmNlbGxhdGlvbi5VTkNIQU5HRURdOiBgVW5jaGFuZ2VkYCxcbiAgW0VjaG9DYW5jZWxsYXRpb24uREVGQVVMVF06IGBQbGF0Zm9ybSBEZWZhdWx0YCxcbiAgW0VjaG9DYW5jZWxsYXRpb24uQ09ORkVSQU5DRV06IGBDb25mZXJlbmNpbmcgRGVmYXVsdCAoQWdncmVzc2l2ZSBBRUMpYCxcbiAgW0VjaG9DYW5jZWxsYXRpb24uQUVDXTogYEF1dG9tYXRpYyBFY2hvIENhbmNlbGxhdGlvbmAsXG4gIFtFY2hvQ2FuY2VsbGF0aW9uLkFFQ01dOiBgQXV0b21hdGljIEVjaG8gQ2FuY2VsbGF0aW9uIE1vYmlsZWBcbn07XG5cbmV4cG9ydCBjb25zdCBBdXRvbWF0aWNHYWluQ29udHJvbFRvSHVtYW5SZWFkYWJsZSA9IHtcbiAgW0F1dG9tYXRpY0dhaW5Db250cm9sLkRJU0FCTEVEXTogYERpc2FibGVkYCxcbiAgW0F1dG9tYXRpY0dhaW5Db250cm9sLlVOQ0hBTkdFRF06IGBVbmNoYW5nZWRgLFxuICBbQXV0b21hdGljR2FpbkNvbnRyb2wuREVGQVVMVF06IGBQbGF0Zm9ybSBEZWZhdWx0YCxcbiAgW0F1dG9tYXRpY0dhaW5Db250cm9sLkFEQVBUSVZFX0FOQUxPR106IGBBZGFwdGl2ZSBBbmFsb2dgLFxuICBbQXV0b21hdGljR2FpbkNvbnRyb2wuQURBUFRJVkVfRElHSVRBTF06IGBBZGFwdGl2ZSBEaWdpdGFsYCxcbiAgW0F1dG9tYXRpY0dhaW5Db250cm9sLkZJWEVEX0RJR0lUQUxdOiBgRml4ZWQgRGlnaXRhbGBcbn07XG5cbmV4cG9ydCBjb25zdCBOb2lzZVN1cHByZXNzaW9uVG9IdW1hblJlYWRhYmxlID0ge1xuICBbTm9pc2VTdXBwcmVzc2lvbi5ESVNBQkxFRF06IGBEaXNhYmxlZGAsXG4gIFtOb2lzZVN1cHByZXNzaW9uLlVOQ0hBTkdFRF06IGBVbmNoYW5nZWRgLFxuICBbTm9pc2VTdXBwcmVzc2lvbi5ERUZBVUxUXTogYFBsYXRmb3JtIERlZmF1bHRgLFxuICBbTm9pc2VTdXBwcmVzc2lvbi5DT05GRVJFTkNFXTogYENvbmZlcmVuY2luZyBEZWZhdWx0YCxcbiAgW05vaXNlU3VwcHJlc3Npb24uTE9XX1NVUFBSRVNTSU9OXTogYExvd2VzdCBTdXBwcmVzc2lvbmAsXG4gIFtOb2lzZVN1cHByZXNzaW9uLk1PREVSQVRFX1NVUFBSRVNTSU9OXTogYE1vZGVyYXRlIFN1cHByZXNzaW9uYCxcbiAgW05vaXNlU3VwcHJlc3Npb24uSElHSF9TVVBQUkVTU0lPTl06IGBIaWdoIFN1cHByZXNzaW9uYCxcbiAgW05vaXNlU3VwcHJlc3Npb24uVkVSWV9ISUdIX1NVUFBSRVNTSU9OXTogYFZlcnkgSGlnaCBTdXBwcmVzc2lvbmBcbn07XG5cbmV4cG9ydCBjb25zdCBWQURBZ2dyZXNzaXZlbmVzc1RvSHVtYW5SZWFkYWJsZSA9IHtcbiAgW1ZBREFnZ3Jlc3NpdmVuZXNzLkRJU0FCTEVEXTogYERpc2FibGVkYCxcbiAgW1ZBREFnZ3Jlc3NpdmVuZXNzLk5PUk1BTF06IGBOb3JtYWxgLFxuICBbVkFEQWdncmVzc2l2ZW5lc3MuTE9XX0JJUlRBVEVdOiBgTG93IEJpdHJhdGVgLFxuICBbVkFEQWdncmVzc2l2ZW5lc3MuQUdHUkVTU0lWRV06IGBBZ2dyZXNzaXZlYCxcbiAgW1ZBREFnZ3Jlc3NpdmVuZXNzLlZFUllfQUdHUkVTU0lWRV06IGBWZXJ5IEFnZ3Jlc3NpdmVgXG59O1xuXG5leHBvcnQgY29uc3QgSW5wdXRNb2RlVG9IdW1hblJlYWRhYmxlID0ge1xuICBbTkFUSVZFX01PREVfVkFMVUVTW0lucHV0TW9kZXMuVk9JQ0VfQUNUSVZJVFldXTogYFZvaWNlIEFjdGl2aXR5YCxcbiAgW05BVElWRV9NT0RFX1ZBTFVFU1tJbnB1dE1vZGVzLlBVU0hfVE9fVEFMS11dOiBgUHVzaCBUbyBUYWxrYFxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vZGlzY29yZF9hcHAvbGliL3ZvaWNlX2VuZ2luZS9uYXRpdmUvQ29uc3RhbnRzLmpzXG4gKiovIl19